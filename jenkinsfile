pipeline {
    agent any

    tools {
        maven "mvn"
    }
    
    options {
        timeout(time: 1, unit: 'HOURS')
    }

    stages {
        stage('Initialize') {
            steps {
                sh '''
                echo "=${PATH}"
                echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }
        
        stage('Git CheckOut') {
            steps {
                git branch: 'main', url: 'https://github.com/alfecjo/contador-vendas.git'
                script{TAG_VERSION=sh(script:'git rev-parse --short HEAD', returnStdout:true).trim()}
                echo "Image version: ${TAG_VERSION}"
            }
        }
        
        stage('Stage Build') {
            steps {
                bat label: 'Build with Maven', script: 'cmd.exe /C "C:\\Users\\user\\.jenkins\\tools\\hudson.tasks.Maven_MavenInstallation\\mvn\\bin\\mvn.cmd clean package && exit %%ERRORLEVEL%%"'
            }
            
        }
        
        stage('Build Docker Image App contador-vendas') {
            steps {
                script {
                    echo "Image version: ${TAG_VERSION}"
                    sh "docker build -t alfecjo/ic-devops:${TAG_VERSION} ."
                    echo "Rename to latest"
                    sh "docker tag alfecjo/ic-devops:${TAG_VERSION} alfecjo/ic-devops:latest"
                    sh "docker push alfecjo/ic-devops:latest"
                }
            }
        }
        
        stage('Build Docker Image BD master in Postgres') {
            steps {
                script {
                    echo "Image version: ${TAG_VERSION}"
                    sh "docker build -t alfecjo/bd-postgres:${TAG_VERSION} -f Dockerfile.postgres ."
                    echo "Rename to latest"
                    sh "docker tag alfecjo/bd-postgres:${TAG_VERSION} alfecjo/bd-postgres:latest"
                    sh "docker push alfecjo/bd-postgres:latest"
                    echo ""
                }
            }
        }
        
    }
}
